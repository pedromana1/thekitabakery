{% if section.settings.ticker_direct == '1' %}
  {%- assign direct = 'rtl' -%} 
{% else %}
  {%- assign direct = 'ltr' -%}
{% endif %}
<div class="section-{{ section.id }}-padding ticker-bar {{ direct }}" role="region" aria-label="ticker">
{%- style -%}
   .section-{{ section.id }}-padding {
	  padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
	  padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
      background-color: {{ section.settings.bg_section }};
    } 

	@media screen and (min-width: 750px) {
		.section-{{ section.id }}-padding {
			padding-top: {{ section.settings.padding_top }}px;
			padding-bottom: {{ section.settings.padding_bottom }}px;
		}
	}
{%- endstyle -%}
			<ticker-element id="ticker" class="ticker" data-direction="{{ section.settings.ticker_direct | plus: 0 }}"> 
               <div class="ticker__inner">
				{% for block in section.blocks %}
					     <span> - </span>
						<div class="item-block--{{ block.id }} block-title-wrap" {{ block.shopify_attributes }}>
							{% if block.settings.item_title != blank %}
								<div class="block-title">
									{% style %}
										.section-{{ section.id }}-padding.ticker-bar .item-block--{{ block.id }} .block-title {
											color: {{ block.settings.color_title }};
										}
									{% endstyle %}
								{{ block.settings.item_title }}
								</div>
								
							{% endif %}
						</div>
				{% endfor %}
		</div>
	  </ticker-element>
</div>

<style>
 
.ticker-bar{
  	position: relative;
	overflow: hidden;
	white-space: nowrap;
	width: 100%;
}

 .ticker {
    width: 100%;
	position: relative;
	overflow: hidden;
	white-space: nowrap;
  }

	.ticker__inner {
	  position: relative; 
	  box-sizing: content-box;
	  white-space: nowrap;  
	  display: inline-block; 
	}
   

  .ticker .block-title {
  	padding: 0 2rem;
  	line-height: 1; 
  }

   .ticker .block-title *{
	color: inherit;
   }
  
  .ticker .block-title-wrap {
  	display: inline-block; 
  }
  
  .ticker_wrap {
	width: 100%;
	overflow: hidden;
	box-sizing: content-box;
  }

</style>


{% javascript %}
class TickerElement extends HTMLElement {
  constructor() {
    super();
  }

  connectedCallback() {
    const tickerList = this.querySelector('.ticker__inner');
    const tickerDirect = parseInt(this.dataset.direction);
    const tickerListWidth = tickerList.offsetWidth;
    const cloneEl = tickerList.cloneNode(true);
    cloneEl.classList.add('cloned');
    this.append(cloneEl);

    let start = window.performance.now();
    let progress;
    let translateX;
    let duration = 21000;
    let mouseEntered = false;

    const handleMouseEnter = () => {
      mouseEntered = true;
    };

    const handleMouseLeave = () => {
      mouseEntered = false;
    };

    this.parentElement.addEventListener('mouseenter', handleMouseEnter);
    this.parentElement.addEventListener('mouseleave', handleMouseLeave);

    const tick = (now) => {
      if (mouseEntered === false) {
        progress = (now - start) / duration;

        if (progress > 1) {
          progress %= -1;
          start = now;
        }

        if (tickerDirect == 1) {
          translateX = tickerListWidth * progress - tickerListWidth;
          cloneEl.style.transform = `translate3d(${translateX}px, 0 , 0)`;
          tickerList.style.transform = `translate3d(${translateX}px, 0 , 0)`;
        } else {
          translateX = tickerListWidth * progress;
          tickerList.style.transform = `translate3d(-${translateX}px, 0 , 0)`;
          cloneEl.style.transform = `translate3d(-${translateX}px, 0 , 0)`;
        }
      }

      window.requestAnimationFrame(tick);
    };

    tick(window.performance.now());
  }
}

customElements.define('ticker-element', TickerElement);
{% endjavascript %}



{% schema %}
{
  "name": "ZMZ Ticker",
  "class": "section section_ticker",
  "settings": [
	{
	  "type": "radio",
	  "id": "ticker_direct",
	  "label": "Direction",
	  "default": "2",
	  "options": [
		{
		  "value": "1",
		  "label": "Right to Left"
		},
		{
		  "value": "2",
		  "label": "Left to Right"
		}
	  ]
	},
	
	{
	  "type": "color",
	  "id": "bg_section",
	  "label": "Background Section",
	  "default": "#ffffff"
	},
	{
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 25
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 50,
      "step": 1,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 25
    }
  ],
  "blocks": [
	{
	  "type": "text",
	  "name": "Text",
	  "settings": [
		{
		  "type": "inline_richtext",
		  "id": "item_title",
		  "label": "Caption title",
		  "default": "Talk about your brand"
		},
		{
		  "type": "color",
		  "id": "color_title",
		  "label": "Color",
		  "default": "#121212"
		}
	  ]
	}
  ],
  "presets": [
	{
	  "name": "ZMZ Ticker",
	  "category": "Text",
	  "blocks": [
        {
          "type": "text"
        },
        {
          "type": "text"
        },
        {
          "type": "text"
        }
	  ]
	}
  ]
}
{% endschema %}


